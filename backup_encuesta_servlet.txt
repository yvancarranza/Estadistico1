
package controlador;

import com.opencsv.CSVReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

/**
 *
 * @author yvans
 */
@WebServlet(name = "encuesta", urlPatterns = {"/encuesta"})
@MultipartConfig(
     fileSizeThreshold = 10*1024*1024,
     maxFileSize = 5*1024*1024,
     maxRequestSize = 10*1024*1024
)
public class encuesta extends HttpServlet {

    private static final long serialVersionUID = 1L;
    private static final String UPLOAD_DIR = "assets/csv";
    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet encuesta</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Servlet encuesta at " + request.getContextPath() + "</h1>");
            out.println("</body>");
            out.println("</html>");
        }
    }

    protected void service(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        
     response.setContentType("text/html;charset=UTF-8");
        
     String metodo = request.getParameter("metodo");
     if(metodo.equals("importarDiccionario"))
        {
            importarDiccionario(request,response);
        }    
    }   
    
    protected void importarDiccionario(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
         
        try{
            String csv = uploadFile(request,"csvFile");
      //      if(!csv.equalsIgnoreCase("csv"))
        //    {
          //       request.getRequestDispatcher("/importarEncuesta.jsp").forward(request, response);
           // }
           // else
            //{
                String csvPath = request.getServletContext().getRealPath("") 
                                 + File.separator
                                 + UPLOAD_DIR
                                 + File.separator
                                 + csv;            
                
                
                String sql = "";
                int salida = 0;
                Connection cnn = null;        
                try {       
                    cnn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Sanamente","root", "");
                } catch (SQLException ex) {
                    Logger.getLogger(encuesta.class.getName()).log(Level.SEVERE, null, ex);
                }
            
                PreparedStatement pstmgen;
            sql = "DELETE FROM tbpregunta ";            
            try
                {
                    pstmgen = cnn.prepareStatement(sql);
                    salida = pstmgen.executeUpdate();
                }
            catch (SQLException ex)
                    {
                        System.out.println(ex.toString());
                    }      

            pstmgen = null;
            sql = "DELETE FROM tbrespuesta ";            
            try
                {
                    pstmgen = cnn.prepareStatement(sql);
                    salida = pstmgen.executeUpdate();
                }
            catch (SQLException ex)
                    {
                        System.out.println(ex.toString());
                    }      
             pstmgen = null;
            sql = "DELETE FROM tbencuesta ";            
            try
                {
                    pstmgen = cnn.prepareStatement(sql);
                    salida = pstmgen.executeUpdate();
                }
            catch (SQLException ex)
                    {
                        System.out.println(ex.toString());
                    }           

        
            String archCSV = csvPath;
            
            //CSVReader csvReader = new CSVReader(new FileReader(archCSV,StandardCharsets.UTF_8));
            CSVReader csvReader = new CSVReader(new InputStreamReader(new FileInputStream(archCSV), "UTF-8"));
   
            String[] fila = null;
            int numreg = 0;
            while((fila = csvReader.readNext()) != null)
            {
                if(numreg == 0)
                {
                    System.out.println("Columnas");
                    for(int ifila = 0;ifila<fila.length;ifila++ )
                    {
                        //System.out.println(fila[ifila]);
                    }
                    numreg++;
                }
                else
                {
                    //id Variable
                    String idVariable;
                    String nomVariable;
                    String respuesta;
                    String tipocampo;
                    String formulario;

                    idVariable = fila[0];
                    formulario = fila[1];            
                    tipocampo = fila[3];
                    nomVariable = fila[4];           
                    respuesta    = fila[5];

                    //Evaluar si nombre de variable tiene html
                    if(tipocampo.contains("dropdown"))
                    {
                        if(nomVariable.contains("Distrito"))
                            nomVariable = "Distrito";
                        if(nomVariable.contains("RegiÃ³n"))
                            nomVariable = "Region";
                        if(nomVariable.contains("Provincia"))
                            nomVariable = "Provincia";                
                    }

                    if(tipocampo.contains("radio"))
                    {
                        if(nomVariable.contains("<div"))
                        {
                            int posradio = nomVariable.indexOf("<div");
                            nomVariable= nomVariable.substring(0, posradio);
                        }

                    }

                    if(tipocampo.contains("descriptive") || tipocampo.contains("calc"))
                        nomVariable= "";
                    
                    if(tipocampo.contains("text") && nomVariable.contains(">"))
                    {                
                       int posvar1 = nomVariable.indexOf(">");
                       nomVariable= nomVariable.substring(posvar1+1);
                       posvar1 = nomVariable.indexOf("<");
                       nomVariable= nomVariable.substring(0, posvar1 -1);

                    }           
                    idVariable = idVariable.trim();
                    nomVariable = nomVariable.trim();
                    
                    if(idVariable.equalsIgnoreCase("i14") )
                    {
                        int x = 1;                        
                    }
                    
                    if(!idVariable.isEmpty() && !nomVariable.isEmpty())
                    {                    
                        PreparedStatement pstm;
                        sql = "insert into tbpregunta(idpregunta,codpregunta,nompregunta,tipocampo,formulario)" + 
                                     " values(null,?,?,?,?)";            
                        try
                            {
                            pstm = cnn.prepareStatement(sql);
                            pstm.setString(1,idVariable);
                            pstm.setString(2,nomVariable);
                            pstm.setString(3,tipocampo);
                            pstm.setString(4,formulario);
                            salida = pstm.executeUpdate();
                            }
                        catch (SQLException ex)
                            {
                                System.out.println(nomVariable);
                                System.out.println(ex.toString());
                            }          
                        numreg++;
                    // ------------------------------
                    // Grabar en Tabla de Respuesta
                    // Identificar si se tiene definido separado por palotes
                    boolean ispalote;
                    ispalote = respuesta.contains("|");
                    String CodPregunta;
                    String NomPregunta;
                    CodPregunta = idVariable;
                    NomPregunta = nomVariable;
                    if(ispalote)
                        {
                            String[] values = respuesta.split("\\|");
                            for(int ireg = 0;ireg<values.length;ireg++){
                                String[] valores = values[ireg].split(",");
                                String codRspta = valores[0].trim();
                                String nomRspta = valores[1].trim();
                                NomPregunta = nomVariable.trim()+ " - " + nomRspta;
                                if(tipocampo.contains("checkbox"))
                                {
                                    //
                                 
                                    CodPregunta = idVariable.trim() + "___" + codRspta.trim();
                                    //codRspta = idVariable.trim() + "___" + codRspta.trim();
                                     PreparedStatement pstm1;
                                    sql = "insert into tbpregunta(idpregunta,codpregunta,nompregunta,tipocampo,formulario)" + 
                                                 " values(null,?,?,?,?)";            
                                    try
                                        {
                                        pstm = cnn.prepareStatement(sql);
                                        pstm.setString(1,CodPregunta);
                                        pstm.setString(2,NomPregunta);
                                        pstm.setString(3,tipocampo);
                                        pstm.setString(4,formulario);
                                        salida = pstm.executeUpdate();
                                        }
                                    catch (SQLException ex)
                                        {
                                            System.out.println(nomVariable);
                                            System.out.println(ex.toString());
                                        }          
                                    
                                    //
                                    
                                }
                                PreparedStatement pstm1;
                                String sql1 = "insert into tbrespuesta(idrespuesta,codpregunta,codrespuesta,nomrespuesta)" + 
                                     " values(null,?,?,?)";            
                                try
                                   {
                                        pstm = cnn.prepareStatement(sql1);
                                        pstm.setString(1,CodPregunta);
                                        pstm.setString(2,codRspta);
                                        pstm.setString(3,nomRspta);
                                        salida = pstm.executeUpdate();
                                   }
                                catch (SQLException ex)
                                    {

                                       System.out.println(ex.toString());
                                       System.out.println(nomRspta);
                                    }  
                                }
                        }
                     }                
                  }
                }
            csvReader.close();
      
            
            // FIN DE IMPORTACION
            
    archCSV = "D:\\DataVariables.csv";
    csvReader = new CSVReader(new FileReader(archCSV));
    fila = null;
    numreg = 0;
    String Preguntas[] =null;
    while((fila = csvReader.readNext()) != null){           
        if(numreg == 0){
            Preguntas = fila;
            numreg++;
          }
        else {            
                int idencuesta = Integer.parseInt(fila[0]);
                for(int ifila = 1;ifila<fila.length;ifila++ ){                    
                    PreparedStatement pstm1;
                    String valrspta;
                    String codpregunta;
                    valrspta = fila[ifila].trim();
                    codpregunta = Preguntas[ifila].trim();
                    if(!valrspta.isEmpty())  {
                        String sql1 = "insert into tbencuesta(idregistro,idencuesta,codpregunta,valrspta)" + 
                             " values(null,?,?,?)";            
                        try
                           {
                                pstm1 = cnn.prepareStatement(sql1);
                                pstm1.setInt(1, idencuesta);
                                pstm1.setString(2,codpregunta);
                                pstm1.setString(3,valrspta);
                                salida = pstm1.executeUpdate();
                           }
                        catch (SQLException ex)
                            {

                               System.out.println(ex.toString());
                               System.out.println(valrspta);
                            }  
                    }
                }                   
                 numreg++;
                }            
           }
           csvReader.close();
           try {
                cnn.close();
               }
           catch (SQLException ex) {
            Logger.getLogger(encuesta.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            
            ///
            
            
        } catch(Exception e) {
            System.err.println(e.getMessage());
            
        }

     }
    private String getFileName(Part part)
    {
        final String partHeader = part.getHeader("content-disposition");
        System.out.println("************ PartHeader :" + partHeader);
        for(String content: part.getHeader("content-disposition").split(";"))
        {
            if(content.trim().startsWith("filename"))
            {
                return content.substring(content.indexOf('=')+1).trim().replace("\"","");
            }
        }
        return null;
    }
    private String uploadFile(HttpServletRequest request,String name){
        String fileName = "";
        try {
            Part filePart = request.getPart(name);
            fileName = getFileName(filePart);
            String applicationPath = request.getServletContext().getRealPath("");
            System.out.println("application path :" + applicationPath);
            String basePath = applicationPath + File.separator + UPLOAD_DIR + File.separator;
            System.out.println("basePath : " + basePath);
            InputStream inputStream = null;
            OutputStream outputStream = null;
            
            try {
                File outputFilePath = new File(basePath+fileName);
                inputStream = filePart.getInputStream();
                outputStream = new FileOutputStream(outputFilePath);
                int read = 0;
                final byte[] bytes = new byte[1024];
                while ((read = inputStream.read(bytes)) != -1){
                    outputStream.write(bytes,0,read);
                }    
            } catch (Exception ex){
                ex.printStackTrace();
                fileName = "";
            } finally{
                if(outputStream != null){
                    outputStream.close();
                }
                if(inputStream != null){
                    inputStream.close();
                }                
            }
        } catch (Exception e){
            fileName = "";
        }
        
        return fileName;
    }
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        service(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
